@model Project.Models.Bill

@{
	ViewData["Title"] = "Create";
}

<h1>Create Bill</h1>

<hr />
<div class="card">
	<div class="container">
		<div class="row p-3">
		<form id="orderForm" method="post" action="Save">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<div class="form-group col-md-4 my-2">
					<label asp-for="CustomerName" class="control-label"></label>
					<input asp-for="CustomerName" class="form-control" />
					<span asp-validation-for="CustomerName" class="text-danger"></span>
				</div>
				<div class="row my-2">
					<div class="col-md-4">

						<div class="form-group">
							<label asp-for="MenuItem" class="control-label"></label>
							<select id="menuItemSelect" asp-for="MenuId" asp-items="@Model.MenuItem" class="form-control">
								<option>Please select Item</option>

							</select>
							<span asp-validation-for="MenuItem" class="text-danger"></span>
						</div>

					</div>
					<div class="col-md-4">
						<div class="form-group">
							<label asp-for="ItemPrice" class="control-label"></label>
							<input readonly id="itemPriceInput" asp-for="ItemPrice" class="form-control" />
							<span asp-validation-for="ItemPrice" class="text-danger"></span>
						</div>
					</div>

					<div class="form-group">
						<input asp-for="MenuId" class="form-control" type="hidden" />
						<span asp-validation-for="MenuId" class="text-danger"></span>
					</div>
				</div>
				<div class="row my-2">
					<div class="col-md-4">

						<div class="form-group">
							<label asp-for="Quantity" class="control-label"></label>
							<input id="quantityInput" asp-for="Quantity" class="form-control" />
							<span asp-validation-for="Quantity" class="text-danger"></span>
						</div>
					</div>
					<div class="col-md-4">

						<div class="form-group">
							<label asp-for="Total" class="control-label"></label>
							<input readonly id="totalInput" asp-for="Total" class="form-control" />
							<span asp-validation-for="Total" class="text-danger"></span>
						</div>
					</div>
					<div class="col-md-4">

						<div class="form-group">
							<label asp-for="GrandTotal" class="control-label"></label>
							<input readonly id="grandTotalInput" asp-for="GrandTotal" class="form-control" />
							<span asp-validation-for="GrandTotal" class="text-danger"></span>
						</div>
					</div>
				</div>
				<div class="form-group">
					<input type="button" id="savetolistButton" value="Savetolist" class="btn btn-primary" />
				</div>
				<hr />
				<div class="row">
					<div class="col-md-12">
						<table id="orderTable" class="table">
							<thead>
								<tr>
									<th>Item Name</th>
									<th>Price</th>
									<th>Quantity</th>
									<th>Total</th>
									<th>Action</th>
								</tr>
							</thead>
							<tbody></tbody>
						</table>

					</div>
				</div>
				<div class="form-group">
					<input type="submit" id="finalSubmitButton" value="Final Submit" class="btn btn-success" style="display: none;" />
				</div>


			</form>
			<div class="col-md-3 mt-2">
			<button id="downloadPDFButton" value="Download PDF" class="btn btn-info" style="display:none;">Download PDF</button>
</div>
		</div>
	</div>
</div>

<script src="~/lib/jspdf/jspdf.umd.js" type="text/javascript">
</script>
<script>window.jsPDF = window.jspdf.jsPDF;</script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>


<script>
	document.getElementById('menuItemSelect').addEventListener('change', function () {
		var select = document.getElementById('menuItemSelect');
		var selectedOption = select.options[select.selectedIndex];
		var optionValue = selectedOption.value;
		var values = optionValue.split('|'); // Splitting Value to extract ItemId and Price
		var itemId = values[0];
		var itemPrice = parseFloat(values[1]);
		document.getElementById('itemPriceInput').value = itemPrice.toFixed(2);
	});

	document.addEventListener("DOMContentLoaded", function () {

		// Function to update the form total
		function updateFormTotal() {
			var itemPrice = parseFloat(document.getElementById("itemPriceInput").value);
			var quantity = parseInt(document.getElementById("quantityInput").value);
			var totalInput = document.getElementById("totalInput");

			var total = itemPrice * quantity;

			// Update total in the form
			totalInput.value = total.toFixed(2);
		}

		// Add event listener to the quantity field
		document.getElementById("quantityInput").addEventListener("input", updateFormTotal);
	});


</script>

<script>
	$(document).ready(function () {
		$('#savetolistButton').click(function () {
			// Add row to the table
			var itemName = $('#menuItemSelect option:selected').text();
			var price = parseFloat($('#itemPriceInput').val());
			var quantity = parseInt($('#quantityInput').val());
			var total = price * quantity;

			var row = '<tr>' +
				'<td>' + itemName + '</td>' +
				'<td>' + price.toFixed(2) + '</td>' +
				'<td>' + quantity + '</td>' +
				'<td>' + total.toFixed(2) + '</td>' +
				'<td><button class="btn btn-danger deleteRow me-3" type="button">Delete</button>' +
				'<button class="btn btn-secondary decreaseQuantity" type="button">Decrease Quantity</button></td>' +
				'</tr>';

			$('#orderTable tbody').append(row);

			// Update grand total
			updateGrandTotal();

			// Clear input fields after adding row
			$('#menuItemSelect').val('');
			$('#quantityInput').val('');
			$('#itemPriceInput').val('');
			$('#totalInput').val('');

			$('#finalSubmitButton').show();
			$('#downloadPDFButton').show();
		});

		// Event listener for delete row button
		$(document).on('click', '.deleteRow', function () {
			$(this).closest('tr').remove();
			updateGrandTotal();
		});

		// Event listener for decrease quantity button
		$(document).on('click', '.decreaseQuantity', function () {
			var $row = $(this).closest('tr');
			var currentQuantity = parseInt($row.find('td:eq(2)').text());
			if (currentQuantity > 1) {
				$row.find('td:eq(2)').text(currentQuantity - 1);
				var newTotal = parseFloat($row.find('td:eq(1)').text()) * (currentQuantity - 1);
				$row.find('td:eq(3)').text(newTotal.toFixed(2));
			} else {
				$(this).closest('tr').remove();
			}
			updateGrandTotal();
		});

		// Function to generate and download PDF with today's date and time
		function generatePDF() {
			// Initialize jsPDF
			const table = document.getElementById('orderTable');
			const rows = table.querySelectorAll('tbody tr');

			const doc = new jsPDF();
			let y = 15;
			doc.text('Order Details', 10, y);
			y += 10;
			// Add table headers
			let x = 10; // Initial x position
			const headers = ['Item Name', 'Price', 'Quantity', 'Total'];
			headers.forEach(header => {
				doc.text(header, x, y);
				x += 40;
			});

			y += 10; // Increment y position

			// Add table rows
			rows.forEach(row => {
				const cells = row.querySelectorAll('td');
				let x = 10; // Initial x position

				cells.forEach(cell => {
					doc.text(cell.innerText, x, y);
					x += 40; // Increment x position for each cell
				});

				y += 10; // Increment y position for each row
			});
			// Get current date and time
			var currentDate = new Date();
			var formattedDate = currentDate.toLocaleDateString().replace(/\//g, '-');
			var formattedTime = currentDate.toLocaleTimeString().replace(/:/g, '-');

			// Generate filename with today's date and time
			var filename = 'order_table_' + formattedDate + '_' + formattedTime + '.pdf';

			// Save the PDF with the generated filename
			doc.save(filename);
		}

		// Function to extract table data
		function getTableData() {
			var data = [];
			$('#orderTable tbody tr').each(function () {
				var rowData = [
					$(this).find('td:eq(0)').text(),
					$(this).find('td:eq(1)').text(),
					$(this).find('td:eq(2)').text(),
					$(this).find('td:eq(3)').text()
				];
				data.push(rowData);
			});
			return data;
		}

		// Event listener for Download PDF button
		$('#downloadPDFButton').click(function () {
			generatePDF();
		});
	});

	// Function to update the grand total
	function updateGrandTotal() {
		var grandTotal = 0;
		$('#orderTable tbody tr').each(function () {
			var total = parseFloat($(this).find('td:eq(3)').text());
			grandTotal += total;
		});
		$('#grandTotalInput').val(grandTotal.toFixed(2));
	}

</script>